apiVersion: v1
kind: Secret
metadata:
  name: https-mirror-secret-{{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
  namespace: {{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
  annotations:
    reflector.v1.k8s.emberstack.com/reflects: '{{required "sspNamespace not defined" .Values.deployment.sspNamespace}}/https-secret-{{required "sspNamespace not defined" .Values.deployment.sspNamespace}}'
type: kubernetes.io/tls
data:
  ca.crt: ""
  tls.crt: ""
  tls.key: ""

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: ssp-service-db-np-{{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
spec:
  policyTypes:
  - Ingress
  - Egress
  podSelector:
    matchLabels:
      sspNamespace: {{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
  ingress:
  - from:
    - podSelector:
        matchLabels:
          sspNamespace: {{required "sspNamespace not defined" .Values.deployment.sspNamespace}}

---

apiVersion: k8s.nginx.org/v1
kind: VirtualServer
metadata:
  name: ssp-vs-{{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
  namespace: {{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
spec:
  tls:
    secret: https-mirror-secret-{{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
  host: {{required "hostName not defined" .Values.deployment.hostName}}
  upstreams:
  - name: web
    service: ssp-service-{{required "sspNamespace not defined" .Values.deployment.sspNamespace}}
    port: 80
  routes:
  - path: /
    action:
      pass: web
